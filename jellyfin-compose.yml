---

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: always
    user: 1000:1000
    # Network mode of 'host' exposes the ports on the host. This is needed for DLNA access.
    # network_mode: 'host'
    volumes:
      - jellyfin:/config
      - cache:/cache
      - media:/media
    env_file: ./env/jellyfin.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
    depends_on:
      traefik:
        condition: service_healthy
        restart: true

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: always
    env_file: ./env/jellyfin.env
    volumes:
      - jellyseerr:/app/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${DOMAIN}`)
      - traefik.http.routers.jellyseerr.entrypoints=websecure
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
    depends_on:
      traefik:
        condition: service_healthy
        restart: true
      jellyfin:
        condition: service_healthy
        restart: true

networks:
  default:
    name: media_network
    driver: bridge
    attachable: true

volumes:
  media: # Media library
    driver: local
    driver_opts:
      type: bind
      device: "${NFS_VOLUME}/data/media"

  jellyseerr: # Jellyseerr app data.
    driver: local
    driver_opts:
      type: bind
      device: "${NFS_VOLUME}/docker_data/jellyseerr"

  jellyfin: # Jellyfin app data.
    driver: local
    driver_opts:
      type: bind
      device: "${NFS_VOLUME}/docker_data/jellyfin"

  cache: # Jellyfin cache data.
    driver: local
    driver_opts:
      type: bind
      device: "${NFS_VOLUME}/docker_data/jellyfin_cache"